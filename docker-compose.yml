version: '3.8'

services:

  booking-process:
    build: ./bookingProcess
    image: cargoverload/booking-process
    restart: unless-stopped
    container_name: booking-process
    environment:
      - PORT=80
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=cargoverload
      - MONGO_DB_TEST=cargoverloadtests
      - CAR_SEARCHING_HOST=car-searching
      - CAR_SEARCHING_PORT=80
      - CAR_BOOKING_PORT=80
      - CAR_BOOKING_HOST=car-booking
    depends_on:
      - mongo
    expose:
      - 80
    labels:
      - "traefik.http.routers.booking-process.rule=PathPrefix(`/booking-process`)"

  car-availability:
    build: ./carAvailability
    image: cargoverload/car-availability
    restart: unless-stopped
    container_name: car-availability
    environment:
      - PORT=80
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=cargoverload
      - CARBOOKING_GETBOOKING_URL=/car-booking/findAll
      - CAR_BOOKING_PORT=80
      - CAR_BOOKING_HOST=car-booking
    depends_on:
      - mongo
    expose:
      - 80
    labels:
      - "traefik.http.routers.car-availability.rule=PathPrefix(`/car-availability`)"

  car-booking:
    build: ./carBooking
    image: cargoverload/car-booking
    restart: unless-stopped
    container_name: car-booking
    environment:
      - PORT=80
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=cargoverload
    depends_on:
      - mongo
    expose:
      - 80
    labels:
      - "traefik.http.routers.car-booking.rule=PathPrefix(`/car-booking`)"

  car-searching:
    build: ./carSearching
    image: cargoverload/car-searching
    restart: unless-stopped
    container_name: car-searching
    environment:
      - PORT=80
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=cargoverload
      - CAR_AVAILABILITY_HOST=car-availability
      - CAR_AVAILABILITY_PORT=80
    depends_on:
      - mongo
    expose:
      - 80
    labels:
      - "traefik.http.routers.car-searching.rule=PathPrefix(`/car-searching`)"


  mongo:
    image: mongo:latest
    container_name: cargoverload-mongo
    restart: unless-stopped
    environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: toor
      - MONGODB_DATABASE="cargoverload"
    expose:
      - 27017
#    ports:
#      - 27017:27017

      ## REVERSE PROXY
  traefik:
    image: traefik:v2.3
    container_name: cargoverload-traefik
    restart: unless-stopped
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.insecure=true"
      - "--providers.docker"
    depends_on:
      - booking-process
      - car-availability
      - car-booking
      - car-searching
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"


